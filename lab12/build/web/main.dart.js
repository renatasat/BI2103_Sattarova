// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const color_scheme = flutter_sdk.src__material__color_scheme;
  const colors = flutter_sdk.src__material__colors;
  const framework = flutter_sdk.src__widgets__framework;
  const binding = flutter_sdk.src__widgets__binding;
  const scaffold = flutter_sdk.src__material__scaffold;
  const snack_bar = flutter_sdk.src__material__snack_bar;
  const text = flutter_sdk.src__widgets__text;
  const app_bar = flutter_sdk.src__material__app_bar;
  const container = flutter_sdk.src__widgets__container;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const gradient = flutter_sdk.src__painting__gradient;
  const alignment = flutter_sdk.src__painting__alignment;
  const basic = flutter_sdk.src__widgets__basic;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const flex = flutter_sdk.src__rendering__flex;
  const card = flutter_sdk.src__material__card;
  const text_style = flutter_sdk.src__painting__text_style;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var coffee_maker_screen = Object.create(dart.library);
  var coffee_maker_service = Object.create(dart.library);
  var models = Object.create(dart.library);
  var $toString = dartx.toString;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $toLowerCase = dartx.toLowerCase;
  var $firstWhere = dartx.firstWhere;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    JSArrayOfColor: () => (T.JSArrayOfColor = dart.constFn(_interceptors.JSArray$(ui.Color)))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    CoffeeRecipeToElevatedButton: () => (T.CoffeeRecipeToElevatedButton = dart.constFn(dart.fnType(elevated_button.ElevatedButton, [models.CoffeeRecipe])))(),
    intToElevatedButton: () => (T.intToElevatedButton = dart.constFn(dart.fnType(elevated_button.ElevatedButton, [core.int])))(),
    JSArrayOfCoffeeRecipe: () => (T.JSArrayOfCoffeeRecipe = dart.constFn(_interceptors.JSArray$(models.CoffeeRecipe)))(),
    JSArrayOfint: () => (T.JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))(),
    CoffeeRecipeTobool: () => (T.CoffeeRecipeTobool = dart.constFn(dart.fnType(core.bool, [models.CoffeeRecipe])))(),
    VoidToNever: () => (T.VoidToNever = dart.constFn(dart.fnType(dart.Never, [])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: coffee_maker_screen.CoffeeMakerScreen.prototype,
        [Widget_key]: null
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: main.CoffeeMakerApp.prototype,
        [Widget_key]: null
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 2000000
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Кофемашина"
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294957753
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 12,
        [EdgeInsets_right]: 12,
        [EdgeInsets_top]: 12,
        [EdgeInsets_left]: 12
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 700,
        [FontWeight_index]: 6
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[9] || CT.C9,
        [TextStyle_fontSize]: 18,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 20,
        [SizedBox_width]: null
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[9] || CT.C9,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[12] || CT.C12,
        [Text_textSpan]: null,
        [Text_data]: "Ресурсы:"
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 10,
        [SizedBox_width]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[12] || CT.C12,
        [Text_textSpan]: null,
        [Text_data]: "Выберите кофе:"
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[16] || CT.C16,
        [TextStyle_inherit]: true
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[12] || CT.C12,
        [Text_textSpan]: null,
        [Text_data]: "Пополнить баланс:"
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[12] || CT.C12,
        [Text_textSpan]: null,
        [Text_data]: "Обслуживание:"
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Пополнить ресурсы"
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 10
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Собрать деньги"
      });
    }
  }, false);
  var C = Array(22).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "file:///zapp/project/lib/coffee_maker_screen.dart",
    "file:///zapp/project/lib/coffee_maker_service.dart",
    "file:///zapp/project/lib/models.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  var Widget_key = dart.privateName(framework, "Widget.key");
  main.CoffeeMakerApp = class CoffeeMakerApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.CoffeeMakerApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({title: "Кофемашина", theme: theme_data.ThemeData.new({colorScheme: new color_scheme.ColorScheme.light({primary: dart.nullCheck(colors.Colors.purple._get(200)), secondary: dart.nullCheck(colors.Colors.pink._get(300))}), useMaterial3: true}), home: C[1] || CT.C1, debugShowCheckedModeBanner: false});
    }
  };
  (main.CoffeeMakerApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.CoffeeMakerApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.CoffeeMakerApp.prototype;
  dart.addTypeTests(main.CoffeeMakerApp);
  dart.addTypeCaches(main.CoffeeMakerApp);
  dart.setMethodSignature(main.CoffeeMakerApp, () => ({
    __proto__: dart.getMethods(main.CoffeeMakerApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.CoffeeMakerApp, I[0]);
  main.main = function main$0() {
    binding.runApp(C[2] || CT.C2);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  coffee_maker_screen.CoffeeMakerScreen = class CoffeeMakerScreen extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new coffee_maker_screen.CoffeeMakerScreen.new({key: key});
    }
    createState() {
      return new coffee_maker_screen._CoffeeMakerScreenState.new();
    }
  };
  (coffee_maker_screen.CoffeeMakerScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    coffee_maker_screen.CoffeeMakerScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = coffee_maker_screen.CoffeeMakerScreen.prototype;
  dart.addTypeTests(coffee_maker_screen.CoffeeMakerScreen);
  dart.addTypeCaches(coffee_maker_screen.CoffeeMakerScreen);
  dart.setMethodSignature(coffee_maker_screen.CoffeeMakerScreen, () => ({
    __proto__: dart.getMethods(coffee_maker_screen.CoffeeMakerScreen.__proto__),
    createState: dart.fnType(framework.State$(coffee_maker_screen.CoffeeMakerScreen), [])
  }));
  dart.setLibraryUri(coffee_maker_screen.CoffeeMakerScreen, I[1]);
  var ___CoffeeMakerScreenState_coffeeMaker = dart.privateName(coffee_maker_screen, "_#_CoffeeMakerScreenState#coffeeMaker");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _showResult = dart.privateName(coffee_maker_screen, "_showResult");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var Color_value = dart.privateName(ui, "Color.value");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_value = dart.privateName(ui, "FontWeight.value");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  coffee_maker_screen._CoffeeMakerScreenState = class _CoffeeMakerScreenState extends framework.State$(coffee_maker_screen.CoffeeMakerScreen) {
    get coffeeMaker() {
      let t0;
      t0 = this[___CoffeeMakerScreenState_coffeeMaker];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("coffeeMaker")) : t0;
    }
    set coffeeMaker(coffeeMaker$35param) {
      this[___CoffeeMakerScreenState_coffeeMaker] = coffeeMaker$35param;
    }
    initState() {
      super.initState();
      this.coffeeMaker = new coffee_maker_service.CoffeeMakerService.new({resources: new models.CoffeeResources.new()});
    }
    [_showResult](message) {
      scaffold.ScaffoldMessenger.of(this.context).showSnackBar(new snack_bar.SnackBar.new({content: new text.Text.new(message), duration: C[3] || CT.C3}));
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[4] || CT.C4, backgroundColor: colors.Colors.purple._get(200)}), body: new container.Container.new({decoration: new box_decoration.BoxDecoration.new({gradient: new gradient.LinearGradient.new({begin: alignment.Alignment.topLeft, end: alignment.Alignment.bottomRight, colors: T.JSArrayOfColor().of([dart.nullCheck(colors.Colors.pink._get(100)), C[5] || CT.C5])})}), child: new basic.Padding.new({padding: C[6] || CT.C6, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new card.Card.new({color: colors.Colors.lightGreenAccent._get(100), child: new basic.Padding.new({padding: C[7] || CT.C7, child: new text.Text.new("Ваш баланс: " + dart.str(this.coffeeMaker.userBalance) + " руб.", {style: C[8] || CT.C8})})}), C[10] || CT.C10, new card.Card.new({color: colors.Colors.purple._get(50), child: new basic.Padding.new({padding: C[6] || CT.C6, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([C[11] || CT.C11, C[13] || CT.C13, new text.Text.new("Молоко: " + dart.str(this.coffeeMaker.resources.milk) + " мл"), new text.Text.new("Вода: " + dart.str(this.coffeeMaker.resources.water) + " мл"), new text.Text.new("Кофейные зерна: " + dart.str(this.coffeeMaker.resources.beans) + " г"), new text.Text.new("Касса: " + dart.str(this.coffeeMaker.resources.cash) + " руб.")])})})}), C[10] || CT.C10, C[14] || CT.C14, new basic.Wrap.new({spacing: 8, children: this.coffeeMaker.coffeeRecipes[$map](elevated_button.ElevatedButton, dart.fn(recipe => new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                      let result = this.coffeeMaker.makeCoffee(recipe.name);
                      this.setState(dart.fn(() => {
                      }, T.VoidTovoid()));
                      this[_showResult](result);
                    }, T.VoidTovoid()), style: elevated_button.ElevatedButton.styleFrom({backgroundColor: colors.Colors.purple._get(200)}), child: new text.Text.new(recipe.name + " (" + dart.str(recipe.price) + " руб.)", {style: C[15] || CT.C15})}), T.CoffeeRecipeToElevatedButton()))[$toList]()}), C[10] || CT.C10, C[17] || CT.C17, new basic.Wrap.new({spacing: 8, children: this.coffeeMaker.moneyOptions[$map](elevated_button.ElevatedButton, dart.fn(amount => new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                      let result = this.coffeeMaker.addMoney(amount);
                      this.setState(dart.fn(() => {
                      }, T.VoidTovoid()));
                      this[_showResult](result);
                    }, T.VoidTovoid()), style: elevated_button.ElevatedButton.styleFrom({backgroundColor: colors.Colors.pink._get(300)}), child: new text.Text.new(dart.str(amount) + " руб.", {style: C[15] || CT.C15})}), T.intToElevatedButton()))[$toList]()}), C[10] || CT.C10, C[18] || CT.C18, new basic.Row.new({children: T.JSArrayOfWidget().of([new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                        let result = this.coffeeMaker.refillResources();
                        this.setState(dart.fn(() => {
                        }, T.VoidTovoid()));
                        this[_showResult](result);
                      }, T.VoidTovoid()), style: elevated_button.ElevatedButton.styleFrom({backgroundColor: colors.Colors.orange._get(300)}), child: C[19] || CT.C19}), C[20] || CT.C20, new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                        let result = this.coffeeMaker.collectCash();
                        this.setState(dart.fn(() => {
                        }, T.VoidTovoid()));
                        this[_showResult](result);
                      }, T.VoidTovoid()), style: elevated_button.ElevatedButton.styleFrom({backgroundColor: colors.Colors.tealAccent._get(400)}), child: C[21] || CT.C21})])})])})})})});
    }
    static ['_#new#tearOff']() {
      return new coffee_maker_screen._CoffeeMakerScreenState.new();
    }
  };
  (coffee_maker_screen._CoffeeMakerScreenState.new = function() {
    this[___CoffeeMakerScreenState_coffeeMaker] = null;
    coffee_maker_screen._CoffeeMakerScreenState.__proto__.new.call(this);
    ;
  }).prototype = coffee_maker_screen._CoffeeMakerScreenState.prototype;
  dart.addTypeTests(coffee_maker_screen._CoffeeMakerScreenState);
  dart.addTypeCaches(coffee_maker_screen._CoffeeMakerScreenState);
  dart.setMethodSignature(coffee_maker_screen._CoffeeMakerScreenState, () => ({
    __proto__: dart.getMethods(coffee_maker_screen._CoffeeMakerScreenState.__proto__),
    [_showResult]: dart.fnType(dart.void, [core.String]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(coffee_maker_screen._CoffeeMakerScreenState, () => ({
    __proto__: dart.getGetters(coffee_maker_screen._CoffeeMakerScreenState.__proto__),
    coffeeMaker: coffee_maker_service.CoffeeMakerService
  }));
  dart.setSetterSignature(coffee_maker_screen._CoffeeMakerScreenState, () => ({
    __proto__: dart.getSetters(coffee_maker_screen._CoffeeMakerScreenState.__proto__),
    coffeeMaker: coffee_maker_service.CoffeeMakerService
  }));
  dart.setLibraryUri(coffee_maker_screen._CoffeeMakerScreenState, I[1]);
  dart.setFieldSignature(coffee_maker_screen._CoffeeMakerScreenState, () => ({
    __proto__: dart.getFields(coffee_maker_screen._CoffeeMakerScreenState.__proto__),
    [___CoffeeMakerScreenState_coffeeMaker]: dart.fieldType(dart.nullable(coffee_maker_service.CoffeeMakerService))
  }));
  var resources$ = dart.privateName(coffee_maker_service, "CoffeeMakerService.resources");
  var userBalance = dart.privateName(coffee_maker_service, "CoffeeMakerService.userBalance");
  var coffeeRecipes = dart.privateName(coffee_maker_service, "CoffeeMakerService.coffeeRecipes");
  var moneyOptions = dart.privateName(coffee_maker_service, "CoffeeMakerService.moneyOptions");
  coffee_maker_service.CoffeeMakerService = class CoffeeMakerService extends core.Object {
    get resources() {
      return this[resources$];
    }
    set resources(value) {
      this[resources$] = value;
    }
    get userBalance() {
      return this[userBalance];
    }
    set userBalance(value) {
      this[userBalance] = value;
    }
    get coffeeRecipes() {
      return this[coffeeRecipes];
    }
    set coffeeRecipes(value) {
      super.coffeeRecipes = value;
    }
    get moneyOptions() {
      return this[moneyOptions];
    }
    set moneyOptions(value) {
      super.moneyOptions = value;
    }
    static ['_#new#tearOff'](opts) {
      let resources = opts && 'resources' in opts ? opts.resources : null;
      return new coffee_maker_service.CoffeeMakerService.new({resources: resources});
    }
    makeCoffee(coffeeType) {
      let t0, t0$, t0$0, t0$1;
      let recipe = this.coffeeRecipes[$firstWhere](dart.fn(r => r.name[$toLowerCase]() === coffeeType[$toLowerCase](), T.CoffeeRecipeTobool()), {orElse: dart.fn(() => dart.throw(core.Exception.new("Неизвестный тип кофе")), T.VoidToNever())});
      if (this.userBalance < recipe.price) {
        return "Недостаточно средств. Нужно: " + dart.str(recipe.price) + " руб.";
      }
      if (this.resources.water < recipe.water || this.resources.milk < recipe.milk || this.resources.beans < recipe.beans) {
        return "Недостаточно ингредиентов";
      }
      t0 = this.resources;
      t0.water = t0.water - recipe.water;
      t0$ = this.resources;
      t0$.milk = t0$.milk - recipe.milk;
      t0$0 = this.resources;
      t0$0.beans = t0$0.beans - recipe.beans;
      this.userBalance = this.userBalance - recipe.price;
      t0$1 = this.resources;
      t0$1.cash = t0$1.cash + recipe.price;
      return "Ваш " + coffeeType + " готов!";
    }
    addMoney(amount) {
      this.userBalance = this.userBalance + amount;
      return "Баланс пополнен на " + dart.str(amount) + " руб.";
    }
    refillResources() {
      this.resources.water = 250;
      this.resources.milk = 250;
      this.resources.beans = 250;
      return "Ресурсы пополнены";
    }
    collectCash() {
      let collected = this.resources.cash;
      this.resources.cash = 0;
      return "Собрано " + dart.str(collected) + " руб.";
    }
  };
  (coffee_maker_service.CoffeeMakerService.new = function(opts) {
    let resources = opts && 'resources' in opts ? opts.resources : null;
    this[userBalance] = 0;
    this[coffeeRecipes] = T.JSArrayOfCoffeeRecipe().of([new models.CoffeeRecipe.new({name: "Эспрессо", water: 50, milk: 0, beans: 18, price: 150}), new models.CoffeeRecipe.new({name: "Капучино", water: 200, milk: 100, beans: 24, price: 250})]);
    this[moneyOptions] = T.JSArrayOfint().of([100, 200, 300, 400, 500]);
    this[resources$] = resources;
    ;
  }).prototype = coffee_maker_service.CoffeeMakerService.prototype;
  dart.addTypeTests(coffee_maker_service.CoffeeMakerService);
  dart.addTypeCaches(coffee_maker_service.CoffeeMakerService);
  dart.setMethodSignature(coffee_maker_service.CoffeeMakerService, () => ({
    __proto__: dart.getMethods(coffee_maker_service.CoffeeMakerService.__proto__),
    makeCoffee: dart.fnType(core.String, [core.String]),
    addMoney: dart.fnType(core.String, [core.int]),
    refillResources: dart.fnType(core.String, []),
    collectCash: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(coffee_maker_service.CoffeeMakerService, I[2]);
  dart.setFieldSignature(coffee_maker_service.CoffeeMakerService, () => ({
    __proto__: dart.getFields(coffee_maker_service.CoffeeMakerService.__proto__),
    resources: dart.fieldType(models.CoffeeResources),
    userBalance: dart.fieldType(core.int),
    coffeeRecipes: dart.finalFieldType(core.List$(models.CoffeeRecipe)),
    moneyOptions: dart.finalFieldType(core.List$(core.int))
  }));
  var name$ = dart.privateName(models, "CoffeeRecipe.name");
  var water$ = dart.privateName(models, "CoffeeRecipe.water");
  var milk$ = dart.privateName(models, "CoffeeRecipe.milk");
  var beans$ = dart.privateName(models, "CoffeeRecipe.beans");
  var price$ = dart.privateName(models, "CoffeeRecipe.price");
  models.CoffeeRecipe = class CoffeeRecipe extends core.Object {
    get name() {
      return this[name$];
    }
    set name(value) {
      super.name = value;
    }
    get water() {
      return this[water$];
    }
    set water(value) {
      super.water = value;
    }
    get milk() {
      return this[milk$];
    }
    set milk(value) {
      super.milk = value;
    }
    get beans() {
      return this[beans$];
    }
    set beans(value) {
      super.beans = value;
    }
    get price() {
      return this[price$];
    }
    set price(value) {
      super.price = value;
    }
    static ['_#new#tearOff'](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let water = opts && 'water' in opts ? opts.water : null;
      let milk = opts && 'milk' in opts ? opts.milk : null;
      let beans = opts && 'beans' in opts ? opts.beans : null;
      let price = opts && 'price' in opts ? opts.price : null;
      return new models.CoffeeRecipe.new({name: name, water: water, milk: milk, beans: beans, price: price});
    }
  };
  (models.CoffeeRecipe.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let water = opts && 'water' in opts ? opts.water : null;
    let milk = opts && 'milk' in opts ? opts.milk : null;
    let beans = opts && 'beans' in opts ? opts.beans : null;
    let price = opts && 'price' in opts ? opts.price : null;
    this[name$] = name;
    this[water$] = water;
    this[milk$] = milk;
    this[beans$] = beans;
    this[price$] = price;
    ;
  }).prototype = models.CoffeeRecipe.prototype;
  dart.addTypeTests(models.CoffeeRecipe);
  dart.addTypeCaches(models.CoffeeRecipe);
  dart.setLibraryUri(models.CoffeeRecipe, I[3]);
  dart.setFieldSignature(models.CoffeeRecipe, () => ({
    __proto__: dart.getFields(models.CoffeeRecipe.__proto__),
    name: dart.finalFieldType(core.String),
    water: dart.finalFieldType(core.int),
    milk: dart.finalFieldType(core.int),
    beans: dart.finalFieldType(core.int),
    price: dart.finalFieldType(core.int)
  }));
  var milk$0 = dart.privateName(models, "CoffeeResources.milk");
  var water$0 = dart.privateName(models, "CoffeeResources.water");
  var beans$0 = dart.privateName(models, "CoffeeResources.beans");
  var cash$ = dart.privateName(models, "CoffeeResources.cash");
  models.CoffeeResources = class CoffeeResources extends core.Object {
    get milk() {
      return this[milk$0];
    }
    set milk(value) {
      this[milk$0] = value;
    }
    get water() {
      return this[water$0];
    }
    set water(value) {
      this[water$0] = value;
    }
    get beans() {
      return this[beans$0];
    }
    set beans(value) {
      this[beans$0] = value;
    }
    get cash() {
      return this[cash$];
    }
    set cash(value) {
      this[cash$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let milk = opts && 'milk' in opts ? opts.milk : 250;
      let water = opts && 'water' in opts ? opts.water : 250;
      let beans = opts && 'beans' in opts ? opts.beans : 250;
      let cash = opts && 'cash' in opts ? opts.cash : 0;
      return new models.CoffeeResources.new({milk: milk, water: water, beans: beans, cash: cash});
    }
  };
  (models.CoffeeResources.new = function(opts) {
    let milk = opts && 'milk' in opts ? opts.milk : 250;
    let water = opts && 'water' in opts ? opts.water : 250;
    let beans = opts && 'beans' in opts ? opts.beans : 250;
    let cash = opts && 'cash' in opts ? opts.cash : 0;
    this[milk$0] = milk;
    this[water$0] = water;
    this[beans$0] = beans;
    this[cash$] = cash;
    ;
  }).prototype = models.CoffeeResources.prototype;
  dart.addTypeTests(models.CoffeeResources);
  dart.addTypeCaches(models.CoffeeResources);
  dart.setLibraryUri(models.CoffeeResources, I[3]);
  dart.setFieldSignature(models.CoffeeResources, () => ({
    __proto__: dart.getFields(models.CoffeeResources.__proto__),
    milk: dart.fieldType(core.int),
    water: dart.fieldType(core.int),
    beans: dart.fieldType(core.int),
    cash: dart.fieldType(core.int)
  }));
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "file:///zapp/project/lib/coffee_maker_screen.dart": coffee_maker_screen,
    "file:///zapp/project/lib/coffee_maker_service.dart": coffee_maker_service,
    "file:///zapp/project/lib/models.dart": models
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/coffee_maker_screen.dart","/zapp/project/lib/coffee_maker_service.dart","/zapp/project/lib/models.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CI,IA1BF,iCAAgB;AACd,UAAoB,6BAGD;AAF8B,QAA9B,AAAkB,6BAElB,eAF2B;;AAEL,QAAF,CAApB;;AAEnB,UAAO,AAAQ,uBAAY;AAKvB,QAJK,AAAqC,qBAA7B,qCAAuB,uBAAW,QAAC;AAG9C,UAFC,AAAQ,sBAAW,2BAA2B,CAC/C;;;wBAIL,SAAC,GAAG;AACL,UAAO,AAAQ,uBAAY;AAIvB,QAHC,AAAQ,sBAAW,wBAAwB,CAC5C,AAAE,CAAD,eACD,AAAW,UAAD;;2DAGM,yCACb,SAAC,MAAM,QAAQ,MAAM;AAC1B,cAAO,AAAQ,uBAAY;AAC4B,YAAlD,AAAQ,sBAAW,wBAAwB,CAAC,IAAI;;;EAI3D;;AAEiB;AAQd,MAPD,MAAS,gCACC;AACS,UAAf;6CAEe;AACmB,UAAjB;;IAGvB;;;;;;;;UC5C4B;AACxB,YAAO,iCACE,qBACA,uCACoB,6CACI,eAAX,AAAM,0BAAC,kBACI,eAAT,AAAI,wBAAC,uBAEX,yDAGY;IAEhC;;;QAhB4B;AAAtB,uDAAsB,GAAG;;EAAE;;;;;;;;;AAJH,IAA9B;EACF;;ECEwB;;;;;;;ACCoB;IAAyB;;;QAHpC;AAAzB,yEAAyB,GAAG;;EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOZ;;IAAW;oBAAX;;IAAW;;AAIhB,MAAX;AACwD,MAA9D,mBAAc,4DAA8B;IAC9C;kBAEwB;AAMrB,MALiB,AAAY,8BAAT,2BACnB,qCACW,kBAAK,OAAO;IAI3B;UAG0B;AACxB,YAAO,oCACG,+DAEkB,AAAM,0BAAC,cAE3B,yCACQ,gDACA,wCACS,kCACF,yCACP,uBACU,eAAT,AAAI,wBAAC,mCAKX,sDAEE,0CACkC,yCAC7B,wBAER,0BACgB,AAAgB,oCAAC,aACxB,sDAEE,kBACL,AAA6C,0BAA9B,AAAY,gCAAY,uDAW7C,0BACgB,AAAM,0BAAC,YACd,sDAEE,0CACkC,yCAC7B,0DASR,kBAAK,AAA0C,sBAA/B,AAAY,AAAU,mCAAK,QAC3C,kBAAK,AAAyC,oBAAhC,AAAY,AAAU,oCAAM,QAC1C,kBAAK,AAAkD,8BAA/B,AAAY,AAAU,oCAAM,OACpD,kBAAK,AAA2C,qBAAjC,AAAY,AAAU,mCAAK,oDAelD,6BACW,aACC,AAAY,AAAc,AAejC,qEAfqC,QAAC,UAChC,mDACM;AACH,mCAAS,AAAY,4BAAW,AAAO,MAAD;AAC7B,sBAAf,cAAS;;AACU,sBAAnB,kBAAY,MAAM;+CAEE,2DACI,AAAM,0BAAC,eAE1B,kBACF,AAAO,AAA6B,MAA9B,QAAM,gBAAI,AAAO,MAAD,UAAO,0HAgBxC,6BACW,aACC,AAAY,AAAa,AAehC,oEAfoC,QAAC,UAC/B,mDACM;AACH,mCAAS,AAAY,0BAAS,MAAM;AAC3B,sBAAf,cAAS;;AACU,sBAAnB,kBAAY,MAAM;+CAEE,2DACI,AAAI,wBAAC,eAExB,kBACS,SAAZ,MAAM,oHAgBhB,6BACY,wBACR,mDACa;AACH,qCAAS,AAAY;AACZ,wBAAf,cAAS;;AACU,wBAAnB,kBAAY,MAAM;iDAEE,2DACI,AAAM,0BAAC,mDAKnC,mDACa;AACH,qCAAS,AAAY;AACZ,wBAAf,cAAS;;AACU,wBAAnB,kBAAY,MAAM;iDAEE,2DACI,AAAU,8BAAC;IAWvD;;;;;;kDApLwB;;;EAqL1B;;;;;;;;;;;;;;;;;;;;;;;;;;IC9LkB;;;;;;IACZ;;;;;;IAEqB;;;;;;IAiBT;;;;;;;;;;eAIS;;AACjB,mBAAS,AAAc,gCAC3B,QAAC,KAAM,AAAE,AAAK,AAAc,CAApB,0BAAuB,AAAW,UAAD,oDACjC,cAAM,WAAM,mBAAU;AAGhC,UAAI,AAAY,mBAAE,AAAO,MAAD;AACtB,cAAO,AAAmD,4CAAnB,AAAO,MAAD,UAAO;;AAGtD,UAAI,AAAU,AAAM,uBAAE,AAAO,MAAD,UACxB,AAAU,AAAK,sBAAE,AAAO,MAAD,SACvB,AAAU,AAAM,uBAAE,AAAO,MAAD;AAC1B,cAAO;;AAGsB,WAA/B;MAAU,WAAA,AAAM,WAAG,AAAO,MAAD;AACI,YAA7B;MAAU,WAAA,AAAK,WAAG,AAAO,MAAD;AACO,aAA/B;MAAU,aAAA,AAAM,aAAG,AAAO,MAAD;AACE,MAA3B,mBAAA,AAAY,mBAAG,AAAO,MAAD;AACS,aAA9B;MAAU,YAAA,AAAK,YAAG,AAAO,MAAD;AAExB,YAAO,AAAwB,UAAlB,UAAU;IACzB;aAEoB;AACG,MAArB,mBAAA,AAAY,mBAAG,MAAM;AACrB,YAAO,AAAiC,kCAAZ,MAAM;IACpC;;AAGuB,MAArB,AAAU,uBAAQ;AACE,MAApB,AAAU,sBAAO;AACI,MAArB,AAAU,uBAAQ;AAClB,YAAO;IACT;;AAGQ,sBAAY,AAAU;AACV,MAAlB,AAAU,sBAAO;AACjB,YAAO,AAAyB,uBAAf,SAAS;IAC5B;;;QA3CkC;IArB9B,oBAAc;IAEO,sBAAgB,8BACvC,mCACQ,mBACC,UACD,UACC,WACA,OAET,mCACQ,mBACC,WACD,YACC,WACA;IAIK,qBAAe,qBAAC,KAAK,KAAK,KAAK,KAAK;IAElB;;EAAW;;;;;;;;;;;;;;;;;;;;;;;;ICxBhC;;;;;;IACH;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;;;;;;;;;;;QAGM;QACA;QACA;QACA;QACA;IAJA;IACA;IACA;IACA;IACA;;EACd;;;;;;;;;;;;;;;;;IAIE;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;;;;;;;;;;QAGG;QACA;QACA;QACA;IAHA;IACA;IACA;IACA;;EACL","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    zapp__project__lib__coffee_maker_screen: coffee_maker_screen,
    zapp__project__lib__coffee_maker_service: coffee_maker_service,
    zapp__project__lib__models: models
  };
}));

//# sourceMappingURL=main.js.map
